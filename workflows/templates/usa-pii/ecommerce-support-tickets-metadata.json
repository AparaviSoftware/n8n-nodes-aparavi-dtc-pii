{
  "name": "E-commerce Support Tickets - With Metadata",
  "nodes": [
    {
      "parameters": {},
      "id": "start-node",
      "name": "Manual Trigger",
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [240, 300]
    },
    {
      "parameters": {
        "jsCode": "// Sample support ticket data\nconst tickets = [\n  {\n    ticketId: \"TICKET-001\",\n    customerName: \"Sarah Johnson\",\n    email: \"sarah.johnson@email.com\",\n    phone: \"(555) 123-4567\",\n    orderNumber: \"ORD-789456\",\n    issue: \"I need to update my credit card ending in 4532-1234-5678-9012 for my subscription\",\n    priority: \"high\",\n    department: \"billing\",\n    createdAt: \"2024-01-15T10:30:00Z\"\n  },\n  {\n    ticketId: \"TICKET-002\",\n    customerName: \"Mike Chen\",\n    email: \"mike.chen@email.com\",\n    phone: \"(555) 987-6543\",\n    orderNumber: \"ORD-123789\",\n    issue: \"My SSN 987-65-4321 was used for verification but I need to change it\",\n    priority: \"urgent\",\n    department: \"security\",\n    createdAt: \"2024-01-15T11:15:00Z\"\n  },\n  {\n    ticketId: \"TICKET-003\",\n    customerName: \"Emily Davis\",\n    email: \"emily.davis@email.com\",\n    phone: \"(555) 456-7890\",\n    orderNumber: \"ORD-456123\",\n    issue: \"Please update my address to 789 Pine St, Seattle, WA 98101\",\n    priority: \"medium\",\n    department: \"shipping\",\n    createdAt: \"2024-01-15T12:00:00Z\"\n  }\n];\n\n// Return each ticket as a separate item for processing\nreturn tickets.map(ticket => ({\n  json: ticket\n}));"
      },
      "id": "sample-tickets",
      "name": "Sample Support Tickets",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [460, 300]
    },
    {
      "parameters": {
        "content": "## ðŸ“Š Metadata-Enabled PII Processing\n\n**This workflow uses `includeMetadata: true`**\n\n### What this enables:\n- **PII Detection Details** - See exactly what was found\n- **Audit Trail** - Track when and how PII was processed\n- **Analytics** - Count PII types and patterns\n- **Compliance Reporting** - Generate detailed reports\n- **Debugging** - Understand why certain data was censored\n\n### Metadata Structure:\n```json\n{\n  \"_metadata\": {\n    \"piiType\": \"usa\",\n    \"processedAt\": \"2024-01-15T10:30:00Z\",\n    \"detectedPII\": {\n      \"ssn\": {\"count\": 1, \"patterns\": [\"123-45-6789\"]},\n      \"email\": {\"count\": 1, \"patterns\": [\"john@email.com\"]}\n    },\n    \"censoringStats\": {\n      \"totalFieldsProcessed\": 4,\n      \"fieldsWithPII\": 2\n    }\n  }\n}\n```\n\n**Perfect for:** Compliance reporting, analytics, debugging, audit trails",
        "height": 800,
        "width": 800
      },
      "id": "explanation-node",
      "name": "Why Include Metadata?",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [680, -720]
    },
    {
      "parameters": {
        "piiType": "usa",
        "inputData": "auto",
        "censorChar": "â–ˆ",
        "options": {
          "preserveStructure": false,
          "includeMetadata": true
        }
      },
      "id": "censor-pii",
      "name": "Censor PII with Metadata",
      "type": "n8n-nodes-aparavi-dtc-pii.aparaviPII",
      "typeVersion": 1,
      "position": [680, 300],
      "credentials": {
        "aparaviApi": "aparavi-api-credential"
      }
    },
    {
      "parameters": {
        "jsCode": "// Get the original data from the sample data node\nconst original = $('Sample Support Tickets').first().json;\n\n// Get the censored data from the PII Censor node\nconst censored = $input.first().json;\n\n// Extract metadata for analysis\nconst metadata = censored._metadata;\n\n// Check if any PII was found and censored\nconst hasPII = JSON.stringify(original) !== JSON.stringify(censored);\n\n// Create comprehensive analysis using metadata\nreturn [{\n  json: {\n    ticketId: original.ticketId,\n    priority: original.priority,\n    department: original.department,\n    hasPII: hasPII,\n    \n    // Original vs Censored comparison\n    originalIssue: original.issue,\n    censoredIssue: censored.issue,\n    originalCustomer: {\n      name: original.customerName,\n      email: original.email,\n      phone: original.phone\n    },\n    censoredCustomer: {\n      name: censored.customerName,\n      email: censored.email,\n      phone: censored.phone\n    },\n    \n    // Metadata-powered insights\n    piiAnalysis: {\n      piiType: metadata.piiType,\n      processedAt: metadata.processedAt,\n      totalFieldsProcessed: metadata.censoringStats?.totalFieldsProcessed || 0,\n      fieldsWithPII: metadata.censoringStats?.fieldsWithPII || 0,\n      piiPercentage: metadata.censoringStats ? \n        Math.round((metadata.censoringStats.fieldsWithPII / metadata.censoringStats.totalFieldsProcessed) * 100) : 0,\n      detectedTypes: Object.keys(metadata.detectedPII || {}),\n      censoringCharacter: metadata.censoringStats?.censoringCharacter || \"â–ˆ\"\n    },\n    \n    // Detailed PII detection breakdown\n    detectedPII: metadata.detectedPII || {},\n    \n    // Compliance and audit info\n    complianceInfo: {\n      auditTrail: true,\n      processingTimestamp: metadata.processedAt,\n      piiTypesDetected: Object.keys(metadata.detectedPII || {}),\n      canGenerateReport: true\n    },\n    \n    createdAt: original.createdAt\n  }\n}];"
      },
      "id": "analyze-with-metadata",
      "name": "Analyze with Metadata",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [900, 300]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "condition-1",
              "leftValue": "={{ $json.hasPII }}",
              "rightValue": true,
              "operator": {
                "type": "boolean",
                "operation": "equal"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "check-pii-detected",
      "name": "Check if PII Detected",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [1120, 300]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "message",
              "value": "ðŸ”’ PII DETECTED - Ticket sanitized with detailed metadata"
            },
            {
              "name": "ticketId",
              "value": "={{ $json.ticketId }}"
            },
            {
              "name": "department",
              "value": "={{ $json.department }}"
            },
            {
              "name": "piiAnalysis",
              "value": "ðŸ“Š PII Analysis:\nâ€¢ Fields processed: {{ $json.piiAnalysis.totalFieldsProcessed }}\nâ€¢ Fields with PII: {{ $json.piiAnalysis.fieldsWithPII }}\nâ€¢ PII percentage: {{ $json.piiAnalysis.piiPercentage }}%\nâ€¢ PII types: {{ $json.piiAnalysis.detectedTypes.join(', ') }}"
            },
            {
              "name": "complianceInfo",
              "value": "ðŸ“‹ Compliance Ready:\nâ€¢ Audit trail: {{ $json.complianceInfo.auditTrail }}\nâ€¢ Processed: {{ $json.complianceInfo.processingTimestamp }}\nâ€¢ PII types: {{ $json.complianceInfo.piiTypesDetected.join(', ') }}"
            },
            {
              "name": "alertLevel",
              "value": "HIGH - PII detected with full metadata for compliance reporting"
            }
          ]
        },
        "options": {}
      },
      "id": "pii-detected-with-metadata",
      "name": "PII Detected with Metadata",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [1340, 200]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "message",
              "value": "âœ… No PII detected - Ticket safe for processing"
            },
            {
              "name": "ticketId",
              "value": "={{ $json.ticketId }}"
            },
            {
              "name": "department",
              "value": "={{ $json.department }}"
            },
            {
              "name": "metadataInfo",
              "value": "ðŸ“Š Processing metadata available for audit trail"
            },
            {
              "name": "alertLevel",
              "value": "LOW - No PII detected, metadata available for compliance"
            }
          ]
        },
        "options": {}
      },
      "id": "no-pii-with-metadata",
      "name": "No PII with Metadata",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [1340, 400]
    }
  ],
  "connections": {
    "Manual Trigger": {
      "main": [
        [
          {
            "node": "Sample Support Tickets",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Sample Support Tickets": {
      "main": [
        [
          {
            "node": "Censor PII with Metadata",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Censor PII with Metadata": {
      "main": [
        [
          {
            "node": "Analyze with Metadata",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Analyze with Metadata": {
      "main": [
        [
          {
            "node": "Check if PII Detected",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check if PII Detected": {
      "main": [
        [
          {
            "node": "PII Detected with Metadata",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No PII with Metadata",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2024-01-15T10:00:00.000Z",
  "versionId": "1"
}
